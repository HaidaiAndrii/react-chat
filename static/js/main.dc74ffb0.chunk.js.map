{"version":3,"sources":["utils/constants.js","components/Navbar.jsx","components/Loader.jsx","router.js","components/LoginPage.jsx","components/Chat.jsx","components/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","AppBar","position","Toolbar","variant","Grid","container","justify","Button","onClick","signOut","to","Loader","Container","style","height","window","innerHeight","alignItems","direction","className","publicRoutes","path","Component","loginHandller","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","width","background","Box","p","privateRoutes","firestore","useState","messageValue","setMessageValue","useCollectionData","collection","messages","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","marginTop","border","overflowY","borderRadius","map","message","id","margin","marginLeft","padding","color","backgroundColor","Avatar","src","TextField","fullWidth","rowsMax","value","onChange","e","target","marginBottom","AppRouter","component","exact","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc74ffb0.chunk.js","sourcesContent":["export const LOGIN_ROUTE = 'react-chat/login';\r\nexport const CHAT_ROUTE = 'react-chat/chat';","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport \"../App.css\"\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LOGIN_ROUTE } from \"../utils/constants\";\r\nimport { Context } from \"../index\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useContext } from \"react\";\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n  const {auth} = useContext(Context);\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n  <AppBar position=\"static\">\r\n    <Toolbar variant={\"dense\"}>\r\n      <Grid container justify={\"flex-end\"} >\r\n        {user ? \r\n        <Button onClick={() => auth.signOut()} variant={\"outlined\"}>Log out</Button>\r\n        :\r\n        <NavLink to={LOGIN_ROUTE}>\r\n          <Button variant={\"outlined\"}>Login</Button>\r\n        </NavLink>\r\n      }\r\n      </Grid>\r\n    </Toolbar>\r\n  </AppBar>\r\n  )\r\n}","import { Container, Grid } from \"@material-ui/core\";\r\nimport '../App.css'\r\n\r\n\r\nexport const Loader = () => {\r\n\r\n  return (\r\n    <Container>\r\n    <Grid \r\n     container \r\n     style={{height: window.innerHeight - 50}}\r\n     alignItems={\"center\"}\r\n     justify={\"center\"}\r\n    >\r\n      <Grid\r\n       container\r\n       alignItems={\"center\"}\r\n       direction={\"column\"}\r\n      >\r\n        <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n      </Grid>\r\n    </Grid>\r\n  </Container>\r\n  )\r\n}","import { Chat } from \"./components/Chat\";\r\nimport { LoginPage } from \"./components/LoginPage\";\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from \"./utils/constants\";\r\n\r\nexport const publicRoutes = [\r\n  {\r\n    path: LOGIN_ROUTE,\r\n    Component: LoginPage\r\n  }\r\n]\r\n\r\nexport const privateRoutes = [\r\n  {\r\n    path: CHAT_ROUTE,\r\n    Component: Chat\r\n  }\r\n]","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport firebase from \"firebase\";\r\n\r\nexport const LoginPage = () => {\r\n  const { auth } = useContext(Context);\r\n\r\n  const loginHandller = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const { user } = await auth.signInWithPopup(provider);\r\n    console.log(user);\r\n  }\r\n\r\n  return (\r\n   <Container>\r\n     <Grid \r\n      container \r\n      style={{height: window.innerHeight - 50}}\r\n      alignItems={\"center\"}\r\n      justify={\"center\"}\r\n     >\r\n       <Grid style={{width: 400, background: 'lightgray'}}\r\n        container\r\n        alignItems={\"center\"}\r\n        direction={\"column\"}\r\n       >\r\n         <Box p={5}>\r\n           <Button onClick={loginHandller} variant={\"outlined\"}>Google</Button>\r\n\r\n         </Box>\r\n       </Grid>\r\n     </Grid>\r\n   </Container>\r\n  )\r\n}","import { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\r\nimport { Loader } from './Loader';\r\nimport firebase from \"firebase\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { borderRadius } from \"@material-ui/system\";\r\n\r\nexport const Chat = () => {\r\n\r\n  const { auth, firestore } = useContext(Context);\r\n  const [user] = useAuthState(auth);\r\n  const [messageValue, setMessageValue] = useState('');\r\n  const [messages, loading] = useCollectionData(\r\n    firestore.collection('messages')\r\n    )\r\n\r\n  async function sendMessage() {\r\n    firestore.collection('messages').add({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      text: messageValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    });\r\n\r\n    setMessageValue('');\r\n  }\r\n\r\n  if(loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid \r\n        container \r\n        style={{height: window.innerHeight - 50, marginTop: 20}}\r\n        justify={\"center\"}\r\n\r\n      >\r\n        <div style={{width: '80%', height: '60vh', border: '1px solid white', overflowY: 'auto', borderRadius: '20px'}}>\r\n          {messages.map((message, id) => \r\n            <div key={id} style={{margin: 10,\r\n              border: user.uid === message.uid ? '2px solid green' : 'wpx dashed red',\r\n              marginLeft:  user.uid === message.uid ? 'auto' : '10px',\r\n              width: 'fit-content',\r\n              padding: 8,\r\n              background: 'dark',\r\n              color: 'white',\r\n              backgroundColor: '#3B3B3B',\r\n              borderRadius: '20px'\r\n            }}>\r\n              <Grid container>\r\n                <Avatar src={message.photoURL} />\r\n                <div>\r\n                  {message.displayName}\r\n                </div>\r\n              </Grid>\r\n              <div>{message.text}</div>\r\n            </div>\r\n            )}\r\n        </div>\r\n        <Grid\r\n          container\r\n          direction={\"column\"}\r\n          alignItems={\"flex-end\"}\r\n          style={{width: '80%'}}\r\n          >\r\n            <TextField\r\n              variant={\"outlined\"}\r\n              fullWidth rowsMax={2}\r\n              value={messageValue}\r\n              onChange={e => setMessageValue(e.target.value)}\r\n              style={{backgroundColor: \"white\", color: 'black', borderRadius: '20px', marginBottom: '20px'}}\r\n            />\r\n            <Button style={{backgroundColor: \"green\", color: 'white'}} onClick={sendMessage} variant={\"outlined\"}>Send</Button>\r\n          </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}","import { useContext } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { privateRoutes, publicRoutes } from \"../router\";\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from \"../utils/constants\";\r\nimport { Context } from \"../index\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\n\r\nexport const AppRouter = () => {\r\n  const {auth} = useContext(Context);\r\n  const [user] = useAuthState(auth);\r\n\r\n  return user ? \r\n    (\r\n      <Switch>\r\n        {privateRoutes.map(({path, Component}) => \r\n          <Route key={path} path={path} component={Component} exact={true} /> \r\n        )}\r\n        <Redirect to={CHAT_ROUTE} />\r\n      </Switch>\r\n    )\r\n    :\r\n    ( \r\n      <Switch>\r\n                {publicRoutes.map(({path, Component}) => \r\n          <Route key={path} path={path} component={Component} exact={true} /> \r\n        )}\r\n        <Redirect to={LOGIN_ROUTE} />\r\n      </Switch>\r\n    )\r\n}","import './App.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Navbar } from './components/Navbar';\nimport { AppRouter } from './components/AppRouter';\nimport { Context } from \"./index\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useContext } from \"react\";\nimport { Loader } from './components/Loader';\n\n\nfunction App() {\n\n  const {auth} = useContext(Context);\n  const [user, loading, error] = useAuthState(auth);\n\n  if(loading) {\n    return <Loader />\n  }\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n  firebase.initializeApp({\n    apiKey: \"AIzaSyDt_jJ0DKstcC_ivS627rBSJq_MiEx7mnw\",\n    authDomain: \"real-time-chat-5e729.firebaseapp.com\",\n    projectId: \"real-time-chat-5e729\",\n    storageBucket: \"real-time-chat-5e729.appspot.com\",\n    messagingSenderId: \"886662237048\",\n    appId: \"1:886662237048:web:53cc26351caea0da4fd68d\",\n    measurementId: \"G-JHH6SJ377S\"\n  });\n  // firebase.analytics();\n\n  export const Context = createContext(null);\n\n  const auth = firebase.auth();\n  const firestore = firebase.firestore();\n\nReactDOM.render(\n  <Context.Provider value={{\n    firebase,\n    auth,\n    firestore\n  }}>\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Context.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}